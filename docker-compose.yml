version: "3.8"

services:
  redis:
    container_name: redis  
    image: redis:latest  
    ports:
      - "6379:6379" 
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s

  db:
    container_name: db
    # image: postgres:14-alpine
    build: 
      context: ./db
      dockerfile: Dockerfile
    ports:
      - "5432:5432"
    volumes:
      - ./db/postgresql.conf:/etc/postgresql.conf
      # - ./db/pg_hba.conf:/etc/pg_hba.conf
    expose:
      - 5432
    env_file:
      - ./.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${SQL_DB} -U ${POSTGRES_USER}"]
      interval: 3s
      timeout: 1s
      retries: 5
    # volumes:
    #   - postgres_data:/var/lib/postgresql/data
    restart: always
  
  db_backup:
    container_name: db_backup
    # image: postgres:14-alpine
    build: 
      context: ./db_backup
      dockerfile: Dockerfile
    ports:
      - "5434:5432"
    volumes:
      - ./db_backup/postgresql.conf:/etc/postgresql.conf
    expose:
      - 5432
    restart: always
  
  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8080:8080"
    env_file:
      - ./.env
    restart: on-failure
    depends_on:
      - db
      - redis

  frontend:
    container_name: frontend
    build:
      context: ./frontend/chat-client
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/usr/src/app
    ports:
      - "3000:3000"
    env_file:
      - ./.env
    restart: on-failure
    depends_on:
      # - db
      - backend
      - redis

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    ports:
      - "8888:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: group@group.com
      PGADMIN_DEFAULT_PASSWORD: group

  # Service for Prometheus
  prometheus:
    # Use the official Prometheus image
    image: prom/prometheus
    # Expose ports for Prometheus
    ports:
      - "9090:9090"
    # Mount the local Prometheus configuration file
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    # Command to start Prometheus with the specified configuration file
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  nginx:
    image: nginx
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - backend
      - frontend